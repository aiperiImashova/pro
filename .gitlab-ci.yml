variables:
  GOOGLE_CREDENTIALS: $SERVICE_ACCOUNT_KEY
  GOOGLE_PROJECT: $GCP_PROJECT_ID
  GOOGLE_REGION: $GCP_REGION
  # DOCKER_IMAGE_NAME: "iaiperi04772/app"
  # DOCKER_TLS_CERTDIR: ""
   

stages:
  - terraform-plan
  - terraform-apply
  # - build
  # - push

before_script:
  - cd infrastructure
  - echo "$GOOGLE_CREDENTIALS" > /tmp/account.json
  - terraform init -backend-config="credentials=/tmp/account.json" -input=false

terraform_plan:
  stage: terraform-plan
  script:
    - pwd
    - terraform plan -out=tfplan
  artifacts:
    paths:
      - infrastructure/tfplan
    expire_in: 1 week
  only:
    - merge_requests
    - main
  tags:
    - test

terraform_apply:
  stage: terraform-apply
  script:
    - terraform apply -auto-approve tfplan
  only:
    - main
  tags:
    - test
  dependencies:
    - terraform_plan



# ----- DOCKER -----

# image: docker:latest

# services:
#   - docker:dind


# before_script:
#   - echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin

# build_frontend:
#   stage: build
#   script:
#     - docker build -t $DOCKERHUB_USERNAME/myrepo-frontend:latest dockerfiles/frontend
#   only:
#     - main  
#   tags:
#     - test

# build_backend:
#   stage: build
#   script:
#     - docker build -t $DOCKERHUB_USERNAME/myrepo-backend:latest dockerfiles/backend
#   only:
#     - main
#   tags:
#     - test


# push_frontend:
#   stage: push
#   script:
#     - docker push $DOCKERHUB_USERNAME/myrepo-frontend:latest
#   only:
#     - main
#   dependencies:
#     - build_frontend
#   tags:
#     - test
# # Загрузка образа backend в DockerHub
# push_backend:
#   stage: push
#   script:
#     - docker push $DOCKERHUB_USERNAME/myrepo-backend:latest
#   only:
#     - main
#   dependencies:
#     - build_backend
#   tags:
#     - test
